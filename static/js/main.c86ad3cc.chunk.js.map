{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","services/todo.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","isTitleTouched","setIsTitleTouched","setUserId","isUserTouched","setIsUserTouched","action","method","onSubmit","event","preventDefault","allTodos","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c86ad3cc.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user?.name}\n  </a>\n);\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return <TodoInfo key={todo.id} todo={todo} />;\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  const currentUser = usersFromServer.find(user => user.id === userId);\n\n  return currentUser || null;\n}\n","import { Todo } from '../types/Todo';\n\nexport const getNewId = (allTodos: Todo[]) => {\n  const newId = Math.max(...allTodos.map(todo => todo.id));\n\n  return newId + 1;\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { getUserById } from './services/user';\nimport { getNewId } from './services/todo';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [isTitleTouched, setIsTitleTouched] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [isUserTouched, setIsUserTouched] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setIsTitleTouched(false);\n    setUserId(0);\n    setIsUserTouched(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title || userId === 0) {\n      setIsTitleTouched(true);\n      setIsUserTouched(true);\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getNewId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos((currentTodos) => [...currentTodos, newTodo]);\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n\n          {isTitleTouched && !title\n            ? <span className=\"error\">Please enter a title</span>\n            : null}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={event => setUserId(+event.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user: User) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserTouched && userId === 0\n            ? <span className=\"error\">Please choose a user</span>\n            : null}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}